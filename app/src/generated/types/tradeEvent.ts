/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getTradeTypeDecoder,
  getTradeTypeEncoder,
  type TradeType,
  type TradeTypeArgs,
} from '.';

export type TradeEvent = {
  id: string;
  userId: string;
  fundId: string;
  tradeType: TradeType;
  amount: bigint;
  price: bigint;
  timestamp: bigint;
};

export type TradeEventArgs = {
  id: string;
  userId: string;
  fundId: string;
  tradeType: TradeTypeArgs;
  amount: number | bigint;
  price: number | bigint;
  timestamp: number | bigint;
};

export function getTradeEventEncoder(): Encoder<TradeEventArgs> {
  return getStructEncoder([
    ['id', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['userId', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['fundId', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['tradeType', getTradeTypeEncoder()],
    ['amount', getU64Encoder()],
    ['price', getU64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getTradeEventDecoder(): Decoder<TradeEvent> {
  return getStructDecoder([
    ['id', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['userId', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['fundId', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['tradeType', getTradeTypeDecoder()],
    ['amount', getU64Decoder()],
    ['price', getU64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getTradeEventCodec(): Codec<TradeEventArgs, TradeEvent> {
  return combineCodec(getTradeEventEncoder(), getTradeEventDecoder());
}
